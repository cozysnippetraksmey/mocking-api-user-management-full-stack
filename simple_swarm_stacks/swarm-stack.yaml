version: '3.8'

services:
  backend:
    image: cozysnippet/simple-mocking-api:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - CORS_ALLOWED_ORIGINS=http://frontend.localhost,http://localhost:4000,http://localhost:4200
      - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/actuator/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=PathPrefix(`/backend`)"
        - "traefik.http.services.backend.loadbalancer.server.port=8080"
        - "traefik.http.services.backend.loadbalancer.healthcheck.path=/actuator/health"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
        monitor: 30s
      rollback_config:
        parallelism: 1
        delay: 5s
        monitor: 20s
      resources:
        limits:
          memory: 768M
          cpus: "2.0"
        reservations:
          memory: 384M
          cpus: "1.0"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    image: cozysnippet/simple-mocking-api-portal:latest
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4000 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 25s
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)"
        - "traefik.http.services.frontend.loadbalancer.server.port=4000"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
        monitor: 30s
      rollback_config:
        parallelism: 1
        delay: 5s
        monitor: 20s
      resources:
        limits:
          memory: 512M
          cpus: "1.5"
        reservations:
          memory: 256M
          cpus: "0.75"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  traefik:
    image: traefik:v2.10
    command:
      - "--api.dashboard=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=myapp-ha_app-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.dashboard.address=:9080"
      - "--metrics.prometheus=true"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "9080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.25"

networks:
  app-network:
    driver: overlay
    attachable: true