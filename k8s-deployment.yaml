# Kubernetes Deployment Configuration for User Management System
apiVersion: v1
kind: Namespace
metadata:
  name: user-management
---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-backend
  namespace: user-management
  labels:
    app: user-management-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-management-backend
  template:
    metadata:
      labels:
        app: user-management-backend
    spec:
      containers:
      - name: backend
        image: your-dockerhub-username/user-management-backend:latest  # Replace with your Docker Hub username
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/users
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/users
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: user-management-backend-service
  namespace: user-management
spec:
  selector:
    app: user-management-backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-frontend
  namespace: user-management
  labels:
    app: user-management-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-management-frontend
  template:
    metadata:
      labels:
        app: user-management-frontend
    spec:
      containers:
      - name: frontend
        image: your-dockerhub-username/user-management-frontend:latest  # Replace with your Docker Hub username
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          value: "http://user-management-backend-service:8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: user-management-frontend-service
  namespace: user-management
spec:
  selector:
    app: user-management-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

