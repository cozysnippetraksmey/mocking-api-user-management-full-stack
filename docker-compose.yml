version: '3.8'

services:
  backend:
    build:
      context: ./simple_mocking_api
      dockerfile: Dockerfile
    container_name: user-management-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      # Server Configuration
      - SERVER_PORT=8080
      - CONTEXT_PATH=/
      # CORS Configuration
      - CORS_ALLOWED_ORIGINS=http://localhost:4200,http://frontend:80
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOWED_HEADERS=*
      - CORS_ALLOW_CREDENTIALS=true
      # Application Features
      - MAX_USER_GENERATION=100
      - DEFAULT_USER_GENERATION=10
      - INITIAL_USERS_COUNT=5
      - ENABLE_INITIAL_DATA=true
      # Logging
      - LOG_LEVEL=INFO
      - WEB_LOG_LEVEL=WARN
      # Health Check
      - MANAGEMENT_ENDPOINTS=health,info
      - HEALTH_SHOW_DETAILS=when-authorized
    networks:
      - user-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: simple_mocking_api_portal
      dockerfile: Dockerfile
    container_name: user-management-frontend
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - user-management-network
    environment:
      # Frontend Environment Variables
      - API_URL=http://backend:8080
      - ENABLE_TOAST=true
      - ENABLE_PAGINATION=true
      - DEFAULT_PAGE_SIZE=10

networks:
  user-management-network:
    driver: bridge

volumes:
  user-data:
    driver: local
